// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// HiFunction
double HiFunction(double k, NumericVector hivw, NumericVector lovw, NumericVector hidiff, NumericVector lodiff, NumericVector loweight, NumericVector hiweight, double meantarget, int hilength, int lolength);
RcppExport SEXP _drake_HiFunction(SEXP kSEXP, SEXP hivwSEXP, SEXP lovwSEXP, SEXP hidiffSEXP, SEXP lodiffSEXP, SEXP loweightSEXP, SEXP hiweightSEXP, SEXP meantargetSEXP, SEXP hilengthSEXP, SEXP lolengthSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type k(kSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type hivw(hivwSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lovw(lovwSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type hidiff(hidiffSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lodiff(lodiffSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type loweight(loweightSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type hiweight(hiweightSEXP);
    Rcpp::traits::input_parameter< double >::type meantarget(meantargetSEXP);
    Rcpp::traits::input_parameter< int >::type hilength(hilengthSEXP);
    Rcpp::traits::input_parameter< int >::type lolength(lolengthSEXP);
    rcpp_result_gen = Rcpp::wrap(HiFunction(k, hivw, lovw, hidiff, lodiff, loweight, hiweight, meantarget, hilength, lolength));
    return rcpp_result_gen;
END_RCPP
}
// LoFunction
double LoFunction(double k, NumericVector hivw, NumericVector lovw, NumericVector hidiff, NumericVector lodiff, NumericVector loweight, NumericVector hiweight, double meantarget, int hilength, int lolength);
RcppExport SEXP _drake_LoFunction(SEXP kSEXP, SEXP hivwSEXP, SEXP lovwSEXP, SEXP hidiffSEXP, SEXP lodiffSEXP, SEXP loweightSEXP, SEXP hiweightSEXP, SEXP meantargetSEXP, SEXP hilengthSEXP, SEXP lolengthSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type k(kSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type hivw(hivwSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lovw(lovwSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type hidiff(hidiffSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lodiff(lodiffSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type loweight(loweightSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type hiweight(hiweightSEXP);
    Rcpp::traits::input_parameter< double >::type meantarget(meantargetSEXP);
    Rcpp::traits::input_parameter< int >::type hilength(hilengthSEXP);
    Rcpp::traits::input_parameter< int >::type lolength(lolengthSEXP);
    rcpp_result_gen = Rcpp::wrap(LoFunction(k, hivw, lovw, hidiff, lodiff, loweight, hiweight, meantarget, hilength, lolength));
    return rcpp_result_gen;
END_RCPP
}
// LoZero
double LoZero(double a, double b, double t, NumericVector hivw, NumericVector lovw, NumericVector hidiff, NumericVector lodiff, NumericVector loweight, NumericVector hiweight, double meantarget, int hilength, int lolength);
RcppExport SEXP _drake_LoZero(SEXP aSEXP, SEXP bSEXP, SEXP tSEXP, SEXP hivwSEXP, SEXP lovwSEXP, SEXP hidiffSEXP, SEXP lodiffSEXP, SEXP loweightSEXP, SEXP hiweightSEXP, SEXP meantargetSEXP, SEXP hilengthSEXP, SEXP lolengthSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type hivw(hivwSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lovw(lovwSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type hidiff(hidiffSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lodiff(lodiffSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type loweight(loweightSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type hiweight(hiweightSEXP);
    Rcpp::traits::input_parameter< double >::type meantarget(meantargetSEXP);
    Rcpp::traits::input_parameter< int >::type hilength(hilengthSEXP);
    Rcpp::traits::input_parameter< int >::type lolength(lolengthSEXP);
    rcpp_result_gen = Rcpp::wrap(LoZero(a, b, t, hivw, lovw, hidiff, lodiff, loweight, hiweight, meantarget, hilength, lolength));
    return rcpp_result_gen;
END_RCPP
}
// HiZero
double HiZero(double a, double b, double t, NumericVector hivw, NumericVector lovw, NumericVector hidiff, NumericVector lodiff, NumericVector loweight, NumericVector hiweight, double meantarget, int hilength, int lolength);
RcppExport SEXP _drake_HiZero(SEXP aSEXP, SEXP bSEXP, SEXP tSEXP, SEXP hivwSEXP, SEXP lovwSEXP, SEXP hidiffSEXP, SEXP lodiffSEXP, SEXP loweightSEXP, SEXP hiweightSEXP, SEXP meantargetSEXP, SEXP hilengthSEXP, SEXP lolengthSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type hivw(hivwSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lovw(lovwSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type hidiff(hidiffSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lodiff(lodiffSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type loweight(loweightSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type hiweight(hiweightSEXP);
    Rcpp::traits::input_parameter< double >::type meantarget(meantargetSEXP);
    Rcpp::traits::input_parameter< int >::type hilength(hilengthSEXP);
    Rcpp::traits::input_parameter< int >::type lolength(lolengthSEXP);
    rcpp_result_gen = Rcpp::wrap(HiZero(a, b, t, hivw, lovw, hidiff, lodiff, loweight, hiweight, meantarget, hilength, lolength));
    return rcpp_result_gen;
END_RCPP
}
// CWeightByMeanLinear
NumericVector CWeightByMeanLinear(NumericVector weight, NumericVector var, double meantarget);
RcppExport SEXP _drake_CWeightByMeanLinear(SEXP weightSEXP, SEXP varSEXP, SEXP meantargetSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type weight(weightSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type var(varSEXP);
    Rcpp::traits::input_parameter< double >::type meantarget(meantargetSEXP);
    rcpp_result_gen = Rcpp::wrap(CWeightByMeanLinear(weight, var, meantarget));
    return rcpp_result_gen;
END_RCPP
}
// anyIsNA
bool anyIsNA(NumericVector x);
RcppExport SEXP _drake_anyIsNA(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(anyIsNA(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_drake_HiFunction", (DL_FUNC) &_drake_HiFunction, 10},
    {"_drake_LoFunction", (DL_FUNC) &_drake_LoFunction, 10},
    {"_drake_LoZero", (DL_FUNC) &_drake_LoZero, 12},
    {"_drake_HiZero", (DL_FUNC) &_drake_HiZero, 12},
    {"_drake_CWeightByMeanLinear", (DL_FUNC) &_drake_CWeightByMeanLinear, 3},
    {"_drake_anyIsNA", (DL_FUNC) &_drake_anyIsNA, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_drake(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
